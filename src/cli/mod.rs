use clap::{Arg, App, SubCommand};

pub fn cli() -> clap::ArgMatches<'static> {
    App::new("refine-io")
        .version("1.0")
        .author("eonm. <eon.mathis@gmail.com>")
        .about("Automatise la creation et l'export de projet OpenRefine")
        .arg(Arg::with_name("script")
            .short("s")
            .long("script")
            .value_name("FILE")
            .help("Script de transformation OpenRefine")
            .takes_value(true))
        .arg(Arg::with_name("record_path")
            .short("r")
            .long("record-path")
            .value_name("FILE")
            .help("")
            .required(true)
            .takes_value(true))
        .arg(Arg::with_name("project_name")
            .short("n")
            .long("project-name")
            .value_name("NAME")
            .help("Nom du projet OpenRefine")
            .takes_value(true))
        .arg(Arg::with_name("fichier-sortie")
            .short("o")
            .long("output")
            .value_name("FILE")
            .help("Fichier de sortie")
            .takes_value(true))
        .arg(Arg::with_name("format")
            .short("f")
            .long("format")
            .value_name("FORMAT")
            .help("Format de fichier")
            .possible_values(&["json", "xml", "csv", "tsv", "xls", "xlsx"])
            .required(true)
            .takes_value(true))
            .arg(Arg::with_name("export_format")
            .short("e")
            .long("export-format")
            .value_name("FORMAT")
            .help("Format d'export")
            .possible_values(&["csv", "tsv", "xls", "xlsx", "ods", "html"])
            .takes_value(true))
        .arg(Arg::with_name("input")
            .short("i")
            .long("input")
            .value_name("FICHIER|URL")
            .help("Source")
            .takes_value(true))
        .arg(Arg::with_name("open")
            .long("open")
            .help("Ouvre le projet refine après sa création"))
        .arg(Arg::with_name("silent")
            .long("silent")
            .help("N'affiche pas les logs"))
        .get_matches()
}
